version: '3'

services:
  yolink_chekt:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - FLASK_ENV=production
      - LOG_DIR=/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - yolink-network

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - yolink-network

  websocket-proxy:
    build:
      context: .
      dockerfile: websocket-proxy/Dockerfile
    container_name: yolink-websocket-proxy
    restart: unless-stopped
    environment:
      - PORT=3000
      - API_URL=http://yolink_chekt:5000/get_sensor_data
      - FETCH_INTERVAL=5000
    ports:
      - "3010:3000"
    depends_on:
      - yolink_chekt
    networks:
      - yolink-network

  rtsp-streamer:
    build:
      context: .
      dockerfile: rtsp-streamer/Dockerfile
    container_name: yolink-rtsp-streamer
    restart: unless-stopped
    environment:
      - DASHBOARD_URL=http://websocket-proxy:3000
      - RTSP_PORT=8554
      - STREAM_NAME=yolink-dashboard
      - FRAME_RATE=1
      - WIDTH=1920
      - HEIGHT=1080
      - CYCLE_INTERVAL=10000
      - ENABLE_ONVIF=true
      - SERVER_IP=10.250.250.2
      - RTSP_API_PORT=3001
      - WS_PORT=9999
    ports:
      - "8554:8554"    # RTSP
      - "3001:3001"    # HTTP and ONVIF
      - "9999:9999"    # WebSocket for RTSP clients
      - "1900:1900/udp" # WS-Discovery
    depends_on:
      - websocket-proxy
    networks:
      - yolink-network

networks:
  yolink-network:

volumes:
  redis-data: